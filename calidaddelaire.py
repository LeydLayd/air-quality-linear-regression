# -*- coding: utf-8 -*-
"""CalidadDelAire.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cRrrrucxxbEEmRx7GcQ1JRv_NqOd2pMH

#Importacion de librerias
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import seaborn as sns

"""#Importacion de dataset y limpieza"""

url1 = "https://raw.githubusercontent.com/LeydLayd/air-quality-linear-regression/main/AireDataset.csv"

df1=pd.read_csv(url1,sep=',')

df1

df1=df1.drop('Unidad', axis=1)
df1=df1.drop('Unidad.1', axis=1)
df1= df1.drop('Unidad.2', axis=1)
df1= df1.drop('MonoxidoDeCarbono', axis=1)
df1= df1.drop('Ozono', axis=1)
df1=df1.drop('DioxidoDeNitrogeno',axis=1)
df1=df1.drop('Fecha.1', axis=1)
df1=df1.drop('Fecha.2',axis=1)
df1=df1.drop('Hora.1', axis=1)
df1=df1.drop('Hora.2',axis=1)

df1

df=df1[['ValorCarbono','ValorOzono','ValorNitrogeno']]
df

"""#Correlacion de las variables"""

df.corr()

"""#Estadisticas Basicas"""

Carbono = df.ValorCarbono
Ozono = df.ValorOzono
Nitrogeno = df.ValorNitrogeno

"""**Maximos y minimos**"""

maximo_carbono=Carbono.max()
minimo_carbono=Carbono.min()

pd.DataFrame({
    'Valor Maximo del carbono': [maximo_carbono],
    'Valor Minimo del carbono': [minimo_carbono]
})

df1[df1.ValorCarbono==2.13]

df1[df1.ValorCarbono==0.72]

maximo_ozono=Ozono.max()
minimo_ozono=Ozono.min()

pd.DataFrame({
    'Valor Maximo del ozono': [maximo_ozono],
    'Valor Minimo del ozono': [minimo_ozono]
})

df1[df1.ValorOzono==0.075]

df1[df1.ValorOzono== 0.001]

maximo_nitrogeno= Nitrogeno.max()
minimo_nitrogeno= Nitrogeno.min()

pd.DataFrame({
    'Valor Maximo del Nitrogeno': [maximo_nitrogeno],
    'Valor Minimo del Nitrogeno': [minimo_nitrogeno]
})

df1[df1.ValorNitrogeno==0.048]

df1[df1.ValorNitrogeno==0.005]

"""**Media de las variables**"""

df.mean()

"""**Varianza de la variables**"""

df.var()

"""**Desviacion estandar de las variables**"""

df.std()

"""#Carbono/Ozono
No se encontro una correlacion grande entre los niveles de Ozono y Carbono
"""

np.corrcoef(Carbono,Ozono)

"""#Carbono/Nitrogeno
Hay una relacion grande entre los niveles de Carbono y nitrogeno
"""

np.corrcoef(Carbono,Nitrogeno)

cov= np.cov(Carbono,Nitrogeno)
cov

plt.scatter(Carbono,Nitrogeno)
plt.grid()
plt.title("Diagrama de dispersion")
plt.xlabel('Carbono')
plt.ylabel('Nitrogeno')

Cov1 = np.cov(Carbono,Nitrogeno)
Cov1

m = Cov1[0,1]/np.var(Carbono)
m

b= Nitrogeno.mean()-m*Carbono.mean()
b

"""#Prediccion (Carbon/Nitrogeno)
Para una prediccion se tomo como nivel de carbono en 1.25 y se encontro que el nivel de nitrogeno sera de 0.01999

Se a señalizado la prediccion en la recta con un punto rojo
"""

reg=LinearRegression()
reg.fit(Carbono.values.reshape(-1,1),Nitrogeno)
m=reg.coef_
m

b=reg.intercept_
b

plt.scatter(Carbono,Nitrogeno)
x = np.arange(0.5,2.2,0.01)
y = m*x+b
plt.plot(x,y,'g')
plt.grid()
plt.title("Regresión Lineal")
plt.xlabel('Carbono')
plt.ylabel('Nitrogeno')

reg.score(Carbono.values.reshape(-1,1),Nitrogeno)

reg.predict([[1.25]])

"""#Ozono/Nitrogeno
Se entontro una fuerte relacion entre el Ozono y el Nitrogeno por lo cual se hizo un analisi de estas variables,sin embargo la relacion de estas variables fue inversa
"""

np.corrcoef(Ozono,Nitrogeno)

Cov2 = np.cov(Ozono,Nitrogeno)
Cov2

plt.scatter(Nitrogeno,Ozono)
plt.grid()
plt.title("Diagrama de dispersion")
plt.xlabel('Nitrogeno')
plt.ylabel('Ozono')

m2 = Cov2[0,1]/np.var(Nitrogeno)
m2

b2 = Ozono.mean()-m2*Nitrogeno.mean()
b2

p2 = m2*0.015+b2
p2

"""#Prediccion (Ozono/Nitrogeno)
Para la prediccion se tomo como nivel de nitrogeno 0.015 y nos arrojo que el ozono bajaria un 0.032

Se a señalado la prediccion en la recta con un punto rojo
"""

reg2=LinearRegression()
reg2.fit(Nitrogeno.values.reshape(-1,1),Ozono)
m2=reg2.coef_
m2

b2=reg2.intercept_
b2

reg2.score(Nitrogeno.values.reshape(-1,1),Ozono)

plt.scatter(Nitrogeno,Ozono)
x2 = np.arange(-0.001,0.05,0.01)
y2 = m2*x2 + b2
plt.plot(x2,y2,'g')
plt.grid()
plt.title("Regresión lineal")
plt.xlabel('Nitrogeno')
plt.ylabel('Ozono')

"""#Distribucion de Datos"""

plt.figure(figsize=(10, 5))
sns.boxplot(data=df[['ValorOzono']], color="skyblue", showmeans=True)
plt.title("Diagrama de caja del Ozono")
plt.ylabel("Concentración (ppm)")
plt.show()

plt.figure(figsize=(10, 5))
sns.boxplot(data=df[['ValorNitrogeno']])
plt.title("Diagrama de caja  del Nitrógeno ")
plt.ylabel("Concentración (ppm)")
plt.show()

plt.figure(figsize=(10, 5))
sns.boxplot(data=df[['ValorCarbono']])
plt.title(" Diagrama de caja del Carbono")
plt.ylabel("Concentración (ppm)")
plt.show()

"""#Valores atipícos encontrados"""

def detectar_outliers(columna):
    Q1 = columna.quantile(0.25)
    Q3 = columna.quantile(0.75)
    IQR = Q3 - Q1
    outliers = columna[(columna < (Q1 - 1.5 * IQR)) | (columna > (Q3 + 1.5 * IQR))]
    return outliers

outliers_ozono = detectar_outliers(df['ValorOzono'])
outliers_nitrogeno = detectar_outliers(df['ValorNitrogeno'])
outliers_carbono = detectar_outliers(df['ValorCarbono'])

print("Valores atípicos en Ozono:")
print(outliers_ozono)
print("\nValores atípicos en Nitrógeno:")
print(outliers_nitrogeno)
print("\nValores atípicos en Carbono:")
print(outliers_carbono)

df1[(df1.ValorOzono <= 0.048) & (df1.ValorOzono >=0.044)]

df1[(df1.ValorCarbono <= 1.73) & (df1.ValorCarbono >= 1.64)]